jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
      # Remember to update MINIMUM_RUST_VERSION in pyoxidizer/src/environment.rs
      # when this changes.
      1.41:
        rustup_toolchain: 1.41.1

  steps:
  - ${{ if eq(parameters.name, 'Linux') }}:
    - script: sudo apt-get install -y libyaml-dev
      displayName: Install libyaml

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'

  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install Rust

  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust (Windows)

  - script: rustup component add clippy
    displayName: Install Clippy
    condition: or( eq( variables['rustup_toolchain'], 'stable' ), eq( variables['rustup_toolchain'], 'stable' ) )

  - script: |
        rustc -Vv
        cargo -V
    displayName: Query rust and cargo versions

  - script: |
      cargo build --workspace --exclude oxidized-importer
      cargo test --no-run --workspace --exclude oxidized-importer
    displayName: Build

  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        cargo run --bin pyoxidizer -- python-distribution-extract --download-default $HOME/pythons
        echo "##vso[task.setvariable variable=PATH;]$HOME/pythons/python/install/bin:$PATH"
        echo "##vso[task.setvariable variable=LD_LIBRARY_PATH;]$HOME/pythons/python/install/lib:$LD_LIBRARY_PATH"
        echo "##vso[task.setvariable variable=PYTHONHOME;]$HOME/pythons/python/install"
      displayName: Download and extract default Python distribution

  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        cargo run --bin pyoxidizer -- python-distribution-extract --download-default %USERPROFILE%\pythons
        echo "##vso[task.setvariable variable=PATH;]%USERPROFILE%\pythons\python\install;%PATH%"
      displayName: Download and extract default Python distribution

  - script: cargo test --workspace --exclude oxidized-importer
    displayName: Test
    env:
      IN_CI: '1'

  - script: cargo clippy --workspace --exclude oxidized-importer
    displayName: Clippy
    condition: or( eq( variables['rustup_toolchain'], 'stable' ), eq( variables['rustup_toolchain'], 'stable' ) )
